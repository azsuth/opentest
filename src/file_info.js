const vscode = require("vscode");

const {
  CREATE_NEW_TEST_FILE,
  EFFLUX_PATH,
  APP_PATH,
  JS_EXTENSION
} = require("./constants");
const { validExtension } = require("./utils");

function getFilesInFolder(args) {
  const { testFolderPath } = args;
  const testFolderUri = vscode.Uri.file(testFolderPath);

  return vscode.workspace.fs.readDirectory(testFolderUri).then(
    allFiles => {
      const files = allFiles.map(([file]) => file).filter(validExtension);
      return { ...args, files };
    },
    () => {
      throw {
        ...args,
        errorCode: CREATE_NEW_TEST_FILE
      };
    }
  );
}

function getFileInformation(args) {
  const {
    document: { fileName: documentFileName }
  } = args;

  const effluxIndex = documentFileName.lastIndexOf(EFFLUX_PATH);
  const appIndex = documentFileName.lastIndexOf(APP_PATH);
  const folderIndex = documentFileName.lastIndexOf("/");
  const extensionIndex = documentFileName.lastIndexOf(JS_EXTENSION);

  const importPath = documentFileName.substring(
    effluxIndex + EFFLUX_PATH.length,
    extensionIndex
  );
  const fileNameWithoutExtension = documentFileName.substring(
    folderIndex + 1,
    extensionIndex
  );
  const fileExtension = documentFileName.substring(extensionIndex);
  const testFileName = `${fileNameWithoutExtension}_test${fileExtension}`;
  const testFolderPath = `${documentFileName.substring(
    0,
    appIndex
  )}/test/${documentFileName.substring(
    appIndex + APP_PATH.length,
    folderIndex
  )}`;

  return {
    ...args,
    fileNameWithoutExtension,
    fileExtension,
    testFileName,
    testFolderPath,
    importPath
  };
}

module.exports = { getFileInformation, getFilesInFolder };
